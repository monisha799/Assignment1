# -*- coding: utf-8 -*-
"""Assignment1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1VGufyb_bVKI9f9HvEpOjFdH5zETyiXdE

1. (a) Define a variable in Python. Provide an example of how to create a variable that stores your name

Python Variable are containers that store values
"""

name = "monisha"
print(name)

"""b) What is the difference between a variable and a constant? Can we have constants in Python?

variable is a named storage location that holds a value that can change during the execution of a program.

 constant is a value that cannot be changed once it's defined.

2 a) Create variables of the following types in Python:
1. Integer
2. Float
3. String
4. Boolean

age=22
pi=3.14

b) Write a Python script to display the type of each variable you created.
"""

age = 22
print(age)

pi=3.14
print(pi)

"""3  a) Explain the following arithmetic operators with examples:
1.
Addition (`+`)
2.
Subtraction (`-`)
3.
Multiplication (``)
4.
Division (`/`)
5.
Floor Division (`//`)
6.
Modulus (`%`)
7.
Exponentiation (``)
"""

a = 4
b = 2
print(a+b)

a = 4
b = 2
print(a-b)

a = 4
b = 2
print(a*b)

a = 4
b = 2
print(a/b)

a = 4
b = 2
print(a//b)

a = 4
b = 2
print(a%b)

a = 4
b = 2
print( a ** b)

"""b) Write a Python script to calculate the area of a rectangle using variables `length` and `width` with values 5 and 10, respectively. Use the multiplication operator."""

length = 5
width = 10
area = length * width
print(area)

"""4  a) Explain the following comparison operators with examples:
1.
Equal to (`==`)
2.
Not equal to (`!=`)
3.
Greater than (`>`)
4.
Less than (`<`)
5.
Greater than or equal to (`>=`)
6.
Less than or equal to (`<=`)
"""

a = 5
b = 5
print( a == b)

a = 5
b = 3
print(a != b)

a = 10
b = 5
print(a > b)

a = 5
b = 10
print(a < b)

a = 10
b = 10
print(a >= b)

a = 5
b = 10
print(a <= b)

"""b) Using logical operators (`and`, `or`, `not`), write a Python script that checks if a number is positive and even."""

num = 10
result = num > 0 and num % 2 == 0
print("The number is positive and even:",result)

"""5 a) What is type casting? Explain the difference between implicit and explicit type casting with examples.

Type casting, also known as type conversion, is the process of converting a value of one data type to another data type. In Python, type casting is essential to ensure that the correct data type is used in operations, functions, and assignments.

Implicit Type Casting

Implicit type casting, also known as automatic type conversion, occurs when Python automatically converts a value from one data type to another without explicit instructions.
"""

a = 5
b = 3.5
print(a+b)

"""Explicit Type Casting

Explicit type casting, also known as manual type conversion, occurs when a programmer explicitly converts a value from one data type to another using built-in functions or methods.
"""

a = 5
b = int(a)
print(b)

"""b) Write a Python script that:
1.
Converts a float to an integer.
2.
Converts an integer to a string.
3.
Converts a string to a float.
"""

float_num = 5.7
int_num = int(float_num)
print("Float to Integer:", int_num)

int_num = 10
str_num = str(int_num)
print("Integer to String:", str_num)

str_num = "3.14"
float_num = float(str_num)
print("String to Float:", float_num)

"""6 Write a Python script that asks the user to input two numbers and then:
1. Adds the two numbers and prints the result.
2. Subtracts the second number from the first and prints the result.
3. Multiplies the two numbers and prints the result.
4. Divides the first number by the second and prints the result (handle division by zero).
5. Converts the sum of the numbers to a string and prints the type of the result.
"""

num1 = float(input("Enter the first number: "))
num2 = float(input("Enter the second number: "))

print(num1 + num2)

print( num1 - num2)


print(num1 * num2)

if num2 != 0:
    print(num1 / num2)
else:
    print("Error: Division by zero is not allowed.")

sum_str = str(num1 + num2)
print( sum_str)

